// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  google_id  String   @unique
  username   String?  @unique
  first_name String?
  last_name  String?
  avatar_url String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  friendcode String   @unique

  chats               Chat[]           @relation("UserChats")
  messages            Message[]
  sentInvitations     ChatInvitation[] @relation("InvitationsSent")
  receivedInvitations ChatInvitation[] @relation("InvitationsReceived")
  readReceipts        ReadReceipt[]
}

model Chat {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  participants User[]           @relation("UserChats")
  messages     Message[]
  invitations  ChatInvitation[]
  type         ChatType
}

enum ChatType {
  DIRECT
  GROUP
}

model ChatInvitation {
  id                    Int              @id @default(autoincrement())
  senderGoogleId        String // Foreign key to User model
  receiverGoogleId      String // Foreign key to User model
  chatId                Int // Foreign key to Chat model
  status                InvitationStatus
  createdAt             DateTime         @default(now())

  sender            User @relation("InvitationsSent", fields: [senderGoogleId], references: [google_id])
  receiver          User @relation("InvitationsReceived", fields: [receiverGoogleId], references: [google_id])
  chat              Chat @relation(fields: [chatId], references: [id])
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model Message {
  id                Int      @id @default(autoincrement())
  text              String
  created_at        DateTime @default(now())
  senderGoogleId    String // Foreign key to User model
  chat_id           Int // Foreign key to Chat model

  user              User          @relation(fields: [senderGoogleId], references: [google_id])
  chat              Chat          @relation(fields: [chat_id], references: [id])
  readReceipts      ReadReceipt[]
}

model ReadReceipt {
  id                 Int       @id @default(autoincrement())
  messageId          Int // Foreign key to Message model
  readerGoogleId     String // Foreign key to User model
  readAt             DateTime?

  message Message    @relation(fields: [messageId], references: [id])
  user    User       @relation(fields: [readerGoogleId], references: [google_id])
}
